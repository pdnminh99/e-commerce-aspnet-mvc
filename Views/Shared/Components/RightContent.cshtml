<div class="right_content">
    <div class="shopping_cart">
        <div class="cart_title">Shopping cart</div>
        <div class="cart_details">
            <p id="cart-item-count">0 item</p>
            <br/>
            <span class="border_cart"></span>Total: <span class="price" id="cart-total-price">0$</span>
        </div>
        <div class="cart_icon">
            <a href="#" title="header=[Checkout] body=[&nbsp;] fade=[on]">
                <img src="~/css/images/shoppingcart.png" width="48" height="48" alt=""/>
            </a>
        </div>
    </div>
    @* <div class="title_box">Whatï¿½s new</div>
        <div class="border_box">
          <div class="product_title"><a href="~/details.html">Motorola 156 MX-VL</a></div>
          <div class="product_img"><a href="~/details.html"><img src="~/css/images/p2.gif"   /></a></div>
          <div class="prod_price"><span class="reduce">350$</span> <span class="price">270$</span></div>
        </div> *@
    @await Html.PartialAsync("Components/ManufacturersDisplay")
    <div class="banner_adds">
        <a href="#">
            <img src="~/css/images/bann1.jpg" alt="">
        </a>
    </div>
</div>

<script type="text/javascript">
const shoppingCart = (function () {
    let cartString = localStorage.getItem("cart");
    if (cartString == null) {
        localStorage.setItem("cart", "{}");
        return {}
    }
    return JSON.parse(cartString)
})();

const addProductToCart = ({ProductId, Title, Image, OriginalPrice, Category, Brand}, count) => {
    if (count == null) {
        count = 1;
    }
    let existingItem = shoppingCart[ProductId];
    if (existingItem == null) {
        shoppingCart[ProductId] = {ProductId, Title, Image, OriginalPrice, Category, Brand, count}
    } else {
        shoppingCart[ProductId].count += count;
    }
    if (shoppingCart[ProductId].Title !== Title) {
        shoppingCart[ProductId].Title = Title;
    }
    if (shoppingCart[ProductId].Image !== Image) {
        shoppingCart[ProductId].Image = Image;
    }
    if (shoppingCart[ProductId].OriginalPrice !== OriginalPrice) {
        shoppingCart[ProductId].OriginalPrice = OriginalPrice;
    }
    if (shoppingCart[ProductId].Category !== Category) {
        shoppingCart[ProductId].Category = Category;
    }
    if (shoppingCart[ProductId].Brand !== Brand) {
        shoppingCart[ProductId].Brand = Brand;
    }
    localStorage.setItem("cart", JSON.stringify(shoppingCart))
};

const itemCountDisplayElement = document.getElementById("cart-item-count");
const totalPriceDisplayElement = document.getElementById("cart-total-price");

const refreshShoppingCart = () => {
    let totalPrice = 0;
    let totalItemsCount = 0;

    for (let itemId of Object.keys(shoppingCart)) {
        
        console.log(shoppingCart[itemId]);
        totalPrice += shoppingCart[itemId].count * shoppingCart[itemId].OriginalPrice;
        totalItemsCount += shoppingCart[itemId].count;
    }
    itemCountDisplayElement.innerText = totalItemsCount + (totalItemsCount > 1 ? ' items' : 'item');
    totalPriceDisplayElement.innerText = `${totalPrice}$`
};

function addItem(json) {
    console.log(json);
    addProductToCart(JSON.parse(json), 1);
    refreshShoppingCart();
}

refreshShoppingCart();
</script>